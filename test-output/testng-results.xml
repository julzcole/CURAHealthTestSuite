<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-09T11:22:36 EDT" name="Suite" finished-at="2022-10-09T11:22:57 EDT" duration-ms="21496">
    <groups>
    </groups>
    <test started-at="2022-10-09T11:22:36 EDT" name="Test" finished-at="2022-10-09T11:22:57 EDT" duration-ms="21496">
      <class name="curahealthcare.tests.AppointmentTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:curahealthcare.tests.AppointmentTest@1807f5a7]" started-at="2022-10-09T11:22:36 EDT" name="launchApplication" finished-at="2022-10-09T11:22:38 EDT" duration-ms="2646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="makeAppointment()[pri:0, instance:curahealthcare.tests.AppointmentTest@1807f5a7]" started-at="2022-10-09T11:22:38 EDT" name="makeAppointment" finished-at="2022-10-09T11:22:40 EDT" duration-ms="2015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeAppointment -->
        <test-method is-config="true" signature="stopApplication()[pri:0, instance:curahealthcare.tests.AppointmentTest@1807f5a7]" started-at="2022-10-09T11:22:40 EDT" name="stopApplication" finished-at="2022-10-09T11:22:41 EDT" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopApplication -->
      </class> <!-- curahealthcare.tests.AppointmentTest -->
      <class name="curahealthcare.tests.LoginTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:curahealthcare.tests.LoginTest@69ee81fc]" started-at="2022-10-09T11:22:41 EDT" name="launchApplication" finished-at="2022-10-09T11:22:42 EDT" duration-ms="1567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="incorrectPassword(java.util.HashMap)[pri:0, instance:curahealthcare.tests.LoginTest@69ee81fc]" started-at="2022-10-09T11:22:42 EDT" name="incorrectPassword" data-provider="getData2" finished-at="2022-10-09T11:22:53 EDT" duration-ms="10486" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{neededDay=15, password=ThisIsNotAPassword, comment=I love automation, neededMonthYear=March 2023, username=John Doe, radioValue=Medicaid}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":".text-danger"}
  (Session info: chrome=105.0.5195.127)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-980EN9B', ip: '192.168.1.210', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9b9becf89a55d8f0dcebdee7c8acda86, findElement {using=css selector, value=.text-danger}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.127, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\xXJul\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:65240}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:65240/devtoo..., se:cdpVersion: 105.0.5195.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9b9becf89a55d8f0dcebdee7c8acda86]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".text-danger"}
  (Session info: chrome=105.0.5195.127)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-980EN9B', ip: '192.168.1.210', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9b9becf89a55d8f0dcebdee7c8acda86, findElement {using=css selector, value=.text-danger}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.127, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\xXJul\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:65240}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:65240/devtoo..., se:cdpVersion: 105.0.5195.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9b9becf89a55d8f0dcebdee7c8acda86
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy18.isDisplayed(Unknown Source)
at curahealthcare.tests.LoginTest.incorrectPassword(LoginTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectPassword -->
        <test-method is-config="true" signature="stopApplication()[pri:0, instance:curahealthcare.tests.LoginTest@69ee81fc]" started-at="2022-10-09T11:22:53 EDT" name="stopApplication" finished-at="2022-10-09T11:22:53 EDT" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopApplication -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:curahealthcare.tests.LoginTest@69ee81fc]" started-at="2022-10-09T11:22:53 EDT" name="launchApplication" finished-at="2022-10-09T11:22:55 EDT" duration-ms="1669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="incorrectUsername(java.util.HashMap)[pri:0, instance:curahealthcare.tests.LoginTest@69ee81fc]" started-at="2022-10-09T11:22:55 EDT" name="incorrectUsername" data-provider="getData3" finished-at="2022-10-09T11:22:55 EDT" duration-ms="491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{neededDay=15, password=ThisIsNotAPassword, comment=I love automation, neededMonthYear=March 2023, username=John Doe!, radioValue=Medicaid}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectUsername -->
        <test-method is-config="true" signature="stopApplication()[pri:0, instance:curahealthcare.tests.LoginTest@69ee81fc]" started-at="2022-10-09T11:22:55 EDT" name="stopApplication" finished-at="2022-10-09T11:22:55 EDT" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopApplication -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:curahealthcare.tests.LoginTest@69ee81fc]" started-at="2022-10-09T11:22:55 EDT" name="launchApplication" finished-at="2022-10-09T11:22:57 EDT" duration-ms="1637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="successfulLogin(java.util.HashMap)[pri:0, instance:curahealthcare.tests.LoginTest@69ee81fc]" started-at="2022-10-09T11:22:57 EDT" name="successfulLogin" data-provider="getData" finished-at="2022-10-09T11:22:57 EDT" duration-ms="462" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{neededDay=15, password=ThisIsNotAPassword, comment=I love automation, neededMonthYear=March 2023, username=John Doe, radioValue=Medicaid}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method is-config="true" signature="stopApplication()[pri:0, instance:curahealthcare.tests.LoginTest@69ee81fc]" started-at="2022-10-09T11:22:57 EDT" name="stopApplication" finished-at="2022-10-09T11:22:57 EDT" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopApplication -->
      </class> <!-- curahealthcare.tests.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
